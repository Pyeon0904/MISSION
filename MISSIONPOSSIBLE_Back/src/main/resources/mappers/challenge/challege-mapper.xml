<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.missionpossibleback.mvc.challenge.model.mapper.ChallengeMapper">

	<sql id="selectChallengeSql">
		SELECT
			CLG.CHALLENGE_NO,
			CLG.ID,
			CLG.CATEGORY_NO,
			CLG.CATEGORY_NAME,
			CLG.THUMBNAIL_FILE,
			CLG.CHALLENGE_STATUS,
			CLG.ATTEND_STATUS,
			CLG.STATUS,
			CLG.TITLE,
			CLG.CONTENT,
			CLG.DEADLINE,
			CLG.MAX_COUNT,
			CLG.CURRENT_COUNT,
			CLG.ORIGINAL_FILENAME,
			CLG.RENAMED_FILENAME,
			CLG.CREATE_DATE,
			CLG.MODIFY_DATE,
			CLG.START_DATE,
			CLG.OPENTALK_LINK,
			CLG.MINUS_POINT
		FROM CHALLENGE CLG
		JOIN MEMBER MEM ON(CLG.ID = MEM.ID)
		JOIN CATEGORY CAT ON(CLG.CATEGORY_NO = CAT.CATEGORY_NO)
	</sql>
	
	<!-- 챌린지 객체 매핑 -->
	<resultMap id="challengeResultMap" type="Challenge">
		<id property="challengeNo" column="CHALLENGE_NO" /><!-- PK -->
		<result property="id" column="ID" />
		<result property="categoryNo" column="CATEGORY_NO"/>
		<result property="categoryName" column="CATEGORY_NAME"/>
		<result property="thumbnailFile" column="THUMBNAIL_FILE"/>
		<result property="challengeStatus" column="CHALLENGE_STATUS"/>
		<result property="attendStatus" column="ATTEND_STATUS"/>
		<result property="status" column="STATUS"/>
		<result property="title" column="TITLE"/>
		<result property="content" column="CONTENT"/>
		<result property="deadline" column="DEADLINE"/>
		<result property="maxCount" column="MAX_COUNT"/>
		<result property="currentCount" column="CURRENT_COUNT"/>
		<result property="originalFilename" column="ORIGINAL_FILENAME"/>
		<result property="renamedFilename" column="RENAMED_FILENAME"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<!-- new insert vo -->
		<result property="startDate" column="START_DATE"/>
		<result property="opentalkLink" column="OPENTALK_LINK"/>
		<result property="minusPoint" column="MINUS_POINT"/>
	</resultMap>
	
	<!-- ChallengeCertify 객체 매핑 (챌린지 인증 게시물) -->
	<resultMap id="challengeCertifyResultMap" type="ChallengeCertify">
		<id property="no" column="NO"/>
		<result property="challengeNo" column="CHALLENGE_NO"/>
		<result property="id" column="ID"/>
		<result property="title" column="TITLE"/>
		<result property="originalFilename" column="ORIGINAL_FILENAME"/>
		<result property="renamedFilename" column="RENAMED_FILENAME"/>
		<result property="content" column="CONTENT"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="status" column="STATUS"/>
	</resultMap>
	
	<!-- MyChallengeList 객체 매핑 -->
	<resultMap id="myChallengeListResultMap" type="MyChallengeList" >
		<id property="no" column="NO"/>
		<result property="id" column="ID"/>
		<result property="myChallengeNo" column="MY_CHALLENGE_NO"/>
		<result property="myStatus" column="MY_STATUS"/>
	</resultMap>
	
	<!-- Category 객체 매핑 -->
	<resultMap id="categoryResultMap" type="Category" >
		<result property="categoryNo" column="CATEGORY_NO"/>
		<result property="name" column="NAME"/>
	</resultMap>
	
	<!-- Member 객체 매핑 -->
	<resultMap type="Member" id="memberResultMap">
 		<id property="memberNo" column="MEMBER_NO"/>
 		<result property="id" column="ID" />
 		<result property="password" column="PASSWORD"/>
 		<result property="gradeName" column="GRADE_NAME"/>
 		<result property="nickname" column="NICKNAME"/>
 		<result property="email" column="EMAIL"/>
 		<result property="point" column="POINT"/>
 		<result property="status" column="STATUS"/>
 		<result property="originalFileName" column="ORIGINAL_FILENAME"/>
 		<result property="renamedFileName" column="RENAMED_FILENAME"/>
 	</resultMap>

	<!-- 챌린지 전체 조회 -->
	<select id="selectChallengeList" resultMap="challengeResultMap">
		<include refid="selectChallengeSql"/>
		WHERE CLG.STATUS='Y'
		ORDER BY CLG.CHALLENGE_NO DESC
	</select>
	
	<!-- 삭제된 챌린지 전체 조회 -->
	<select id="selectDeleteChallengeList" resultMap="challengeResultMap">
		<include refid="selectChallengeSql"/>
		WHERE CLG.STATUS='N'
		ORDER BY CLG.CHALLENGE_NO DESC
	</select>

	<!-- 챌린지NO로 챌린지 찾기 -->
	<select id="selectChallengeByNo" parameterType="_int" resultMap="challengeResultMap">
		<include refid="selectChallengeSql"/>
		WHERE CLG.STATUS = 'Y' AND CLG.CHALLENGE_NO = #{challengeNo}
	</select>
	
	<!-- 모집중인 챌린지 조회 -->
	<select id="selectRecruitList" resultMap="challengeResultMap">
		<include refid="selectChallengeSql"/>
		WHERE
		<![CDATA[ 
			TO_CHAR(CLG.START_DATE,'YYYYMMDD') > TO_CHAR(SYSDATE,'YYYYMMDD') 
			AND TO_CHAR(CLG.DEADLINE,'YYYYMMDD') > TO_CHAR(SYSDATE,'YYYYMMDD') AND (CLG.STATUS = 'Y') AND CLG.ATTEND_STATUS = 'PUBLIC'
		]]>
			
		ORDER BY CLG.CHALLENGE_NO DESC
	</select>
	
	<!-- 진행중인 챌린지 조회 -->
	<select id="selectOngoingList" resultMap="challengeResultMap">
		<include refid="selectChallengeSql"/>
		WHERE 
		<![CDATA[ 
			TO_CHAR(CLG.START_DATE,'YYYYMMDD') <= TO_CHAR(SYSDATE,'YYYYMMDD') 
			AND TO_CHAR(CLG.DEADLINE,'YYYYMMDD') >= TO_CHAR(SYSDATE,'YYYYMMDD') AND (CLG.STATUS = 'Y') AND CLG.ATTEND_STATUS = 'PUBLIC'
		]]>
		ORDER BY CLG.CHALLENGE_NO DESC
	</select>
	
	<!-- 종료된 챌린지 조회 -->
	<select id="selectEndList" resultMap="challengeResultMap">
		<include refid="selectChallengeSql"/>
		WHERE 
		<![CDATA[ 
			TO_CHAR(CLG.START_DATE,'YYYYMMDD') < TO_CHAR(SYSDATE,'YYYYMMDD') 
			AND TO_CHAR(CLG.DEADLINE,'YYYYMMDD') < TO_CHAR(SYSDATE,'YYYYMMDD') AND (CLG.STATUS = 'Y') AND CLG.ATTEND_STATUS = 'PUBLIC'
		]]>
		ORDER BY CLG.CHALLENGE_NO DESC
	</select>
	
	<!-- 찜한 챌린지 리스트 조회 -->
	<select id="selectZzimList" parameterType="string" resultMap="challengeResultMap">
		SELECT
		    CLG.CHALLENGE_NO,
		    CLG.ID,
		    CLG.CATEGORY_NO,
		    CLG.CATEGORY_NAME,
		    CLG.THUMBNAIL_FILE,
		    CLG.CHALLENGE_STATUS,
		    CLG.ATTEND_STATUS,
		    CLG.STATUS,
		    CLG.TITLE,
		    CLG.CONTENT,
		    CLG.DEADLINE,
		    CLG.MAX_COUNT,
		    CLG.CURRENT_COUNT,
		    CLG.ORIGINAL_FILENAME,
		    CLG.RENAMED_FILENAME,
		    CLG.CREATE_DATE,
		    CLG.MODIFY_DATE,
		    CLG.START_DATE,
		    CLG.OPENTALK_LINK,
		    CLG.MINUS_POINT
		FROM CHALLENGE CLG
		JOIN MY_CHALLENGE_LIST MCL ON (CLG.CHALLENGE_NO = MCL.MY_CHALLENGE_NO)
		JOIN MEMBER MEM ON(MCL.ID = MEM.ID)
		JOIN CATEGORY CAT ON(CLG.CATEGORY_NO = CAT.CATEGORY_NO)
		WHERE (CLG.STATUS = 'Y') AND (MCL.MY_STATUS = 'ZZIM') AND (MCL.ID = #{id})
		<![CDATA[
				AND TO_CHAR(SYSDATE,'YYYYMMDD') < TO_CHAR(CLG.START_DATE,'YYYYMMDD') 
				AND TO_CHAR(SYSDATE,'YYYYMMDD') < TO_CHAR(CLG.DEADLINE,'YYYYMMDD')
			]]>
			AND ATTEND_STATUS = 'PUBLIC'
	
	</select>
	
	<!-- 참여중인 챌린지 리스트 조회 -->
	<select id="selectJoinList" parameterType="string" resultMap="challengeResultMap">
		SELECT
		    CLG.CHALLENGE_NO,
		    CLG.ID,
		    CLG.CATEGORY_NO,
		    CLG.CATEGORY_NAME,
		    CLG.THUMBNAIL_FILE,
		    CLG.CHALLENGE_STATUS,
		    CLG.ATTEND_STATUS,
		    CLG.STATUS,
		    CLG.TITLE,
		    CLG.CONTENT,
		    CLG.DEADLINE,
		    CLG.MAX_COUNT,
		    CLG.CURRENT_COUNT,
		    CLG.ORIGINAL_FILENAME,
		    CLG.RENAMED_FILENAME,
		    CLG.CREATE_DATE,
		    CLG.MODIFY_DATE,
		    CLG.START_DATE,
		    CLG.OPENTALK_LINK,
		    CLG.MINUS_POINT
		FROM CHALLENGE CLG
		JOIN MY_CHALLENGE_LIST MCL ON (CLG.CHALLENGE_NO = MCL.MY_CHALLENGE_NO)
		JOIN MEMBER MEM ON(MCL.ID = MEM.ID)
		JOIN CATEGORY CAT ON(CLG.CATEGORY_NO = CAT.CATEGORY_NO)
		WHERE 
			(CLG.STATUS = 'Y') 
			AND (MCL.MY_STATUS = 'JOIN') 
			AND (MCL.ID = #{id})
			<![CDATA[
            AND TO_CHAR(SYSDATE,'YYYYMMDD') >= TO_CHAR(CLG.START_DATE,'YYYYMMDD') 
            AND TO_CHAR(SYSDATE,'YYYYMMDD') <= TO_CHAR(CLG.DEADLINE,'YYYYMMDD')
			]]>
			
			
	</select>
	
	<!-- 챌린지 인증 리스트 조회 -->
	<select id="selectCertList" parameterType="_int" resultMap="challengeCertifyResultMap">
		SELECT
			NO,
			CHALLENGE_NO,
			ID,
			TITLE,
			ORIGINAL_FILENAME,
			RENAMED_FILENAME,
			CONTENT,
			CREATE_DATE,
			MODIFY_DATE,
			STATUS
		FROM
			CHALLENGE_CERTIFY
		WHERE
			CHALLENGE_NO = #{no}
		ORDER BY
		 	CREATE_DATE DESC
	</select>
	
	<!-- 챌린지 인증 날짜 조회 (By no, id) - 인증날짜를 구하기 위해! -->
	<!-- 
		(참고) ASC 오름차순으로 정렬(가장 오래된 날짜부터 정렬) 
		(예시)
			21/06/30
			21/07/01
			21/07/02
			21/07/03
			21/07/04
			21/07/04
			21/07/05
			21/07/07
	-->
	<select id="selectCertDateById" parameterType="map" resultType="string">
		SELECT
			CREATE_DATE
		FROM
			CHALLENGE_CERTIFY
		WHERE
			CHALLENGE_NO = #{no} 
			AND ID = #{id}
		ORDER BY
		 	CREATE_DATE ASC
	</select>
	
	<!-- 전체 챌린지 수 확인 -->
	<select id="selectChallengeCount" resultType="_int">
		SELECT COUNT(*)
		FROM CHALLENGE
		WHERE STATUS = 'Y'
	</select>
	
	<!-- 로그인한 유저의 ID로 개설한 챌린지 개수 구하기 -->
	<select id="selectChallengeCountById" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM CHALLENGE
		WHERE ID = #{id}
	</select>
	
	<!-- 모집중인 챌린지 수 확인 -->
	<select id="selectRecruitCount" resultType="_int">
		SELECT COUNT(*)
		FROM CHALLENGE
		WHERE 
		<![CDATA[
			TO_CHAR(START_DATE,'YYYYMMDD') > TO_CHAR(SYSDATE,'YYYYMMDD') 
			AND TO_CHAR(DEADLINE,'YYYYMMDD') > TO_CHAR(SYSDATE,'YYYYMMDD') AND (STATUS = 'Y') AND ATTEND_STATUS = 'PUBLIC'
		]]>
		
	</select>
	
	<!-- 진행중인 챌린지 수 확인 -->
	<select id="selectOngoingCount" resultType="_int">
		SELECT COUNT(*)
		FROM CHALLENGE
		WHERE
		<![CDATA[
			TO_CHAR(START_DATE,'YYYYMMDD') <= TO_CHAR(SYSDATE,'YYYYMMDD') 
			AND TO_CHAR(DEADLINE,'YYYYMMDD') >= TO_CHAR(SYSDATE,'YYYYMMDD') 
			AND (STATUS = 'Y') AND ATTEND_STATUS = 'PUBLIC'
		]]>
		
	</select>
	
	<!-- 종료된 챌린지 수 확인 -->
	<select id="selectEndCount" resultType="_int">
		SELECT COUNT(*)
		FROM CHALLENGE
		WHERE 
		<![CDATA[
			TO_CHAR(START_DATE,'YYYYMMDD') < TO_CHAR(SYSDATE,'YYYYMMDD') AND TO_CHAR(DEADLINE,'YYYYMMDD') < TO_CHAR(SYSDATE,'YYYYMMDD') AND (STATUS = 'Y')
		]]>
		AND ATTEND_STATUS = 'PUBLIC'
	</select>
	
	<!-- 찜한 챌린지 수 확인 -->
	<select id="selectZzimCount" parameterType="String" resultType="_int">
		SELECT
		    COUNT(*)
		FROM CHALLENGE CLG
		JOIN MY_CHALLENGE_LIST MCL ON (CLG.CHALLENGE_NO = MCL.MY_CHALLENGE_NO)
		JOIN MEMBER MEM ON(MCL.ID = MEM.ID)
		JOIN CATEGORY CAT ON(CLG.CATEGORY_NO = CAT.CATEGORY_NO)
		WHERE 
			(CLG.STATUS = 'Y') 
			AND (MCL.MY_STATUS = 'ZZIM') 
			AND (MCL.ID = #{id})
			AND ATTEND_STATUS = 'PUBLIC'
			<![CDATA[
				AND TO_CHAR(SYSDATE,'YYYYMMDD') < TO_CHAR(START_DATE,'YYYYMMDD') AND TO_CHAR(SYSDATE,'YYYYMMDD') < TO_CHAR(DEADLINE,'YYYYMMDD')
			]]>
	</select>	

	<!-- 참여중인 챌린지 수 확인 -->
	<select id="selectJoinCount" parameterType="String" resultType="_int">
		SELECT
		    COUNT(*)
		FROM CHALLENGE CLG
		JOIN MY_CHALLENGE_LIST MCL ON (CLG.CHALLENGE_NO = MCL.MY_CHALLENGE_NO)
		JOIN MEMBER MEM ON(MCL.ID = MEM.ID)
		JOIN CATEGORY CAT ON(CLG.CATEGORY_NO = CAT.CATEGORY_NO)
		WHERE 
			(CLG.STATUS = 'Y') 
			AND (MCL.MY_STATUS = 'JOIN') 
			AND (MCL.ID = #{id})
			<![CDATA[
				AND TO_CHAR(SYSDATE,'YYYYMMDD') >= TO_CHAR(START_DATE,'YYYYMMDD') AND TO_CHAR(SYSDATE,'YYYYMMDD') < TO_CHAR(DEADLINE,'YYYYMMDD')
			]]>
	</select>	
	
	<!-- 종료된 챌린지 중 참여했던 챌린지 개수 확인 -->
	<select id="selectEndJoinCount" parameterType="String" resultType="_int">
		SELECT
		    COUNT(*)
		FROM CHALLENGE CLG
		JOIN MY_CHALLENGE_LIST MCL ON (CLG.CHALLENGE_NO = MCL.MY_CHALLENGE_NO)
		JOIN MEMBER MEM ON(MCL.ID = MEM.ID)
		JOIN CATEGORY CAT ON(CLG.CATEGORY_NO = CAT.CATEGORY_NO)
		WHERE 
			(CLG.STATUS = 'Y') 
			AND (MCL.MY_STATUS = 'JOIN') 
			AND (MCL.ID = #{id})
			<![CDATA[
				AND TO_CHAR(CLG.START_DATE,'YYYYMMDD') < TO_CHAR(SYSDATE,'YYYYMMDD') AND TO_CHAR(CLG.DEADLINE,'YYYYMMDD') < TO_CHAR(SYSDATE,'YYYYMMDD')
			]]>
	</select>		
	
	<!-- 
		로그인한 유저가 누른 챌린지가 참여중인 챌린지인지 아닌지 판단하는 로직 
			- 참여하고 있으면 1 리턴 : 참여중인 챌린지 View
			- 참여하지 않으면 0 리턴 : 진행중인 챌린지 View
	-->
	<select id="selectJoinListCount" parameterType="map" resultType="_int">
		SELECT COUNT(*) 
    	FROM 
    		MY_CHALLENGE_LIST MCL 
    	JOIN 
    		MEMBER M ON(M.ID = MCL.ID)
    	WHERE
        	(MCL.MY_STATUS = 'JOIN') AND 
        	(MCL.MY_CHALLENGE_NO = #{no}) AND
        	(MCL.ID = #{id})
	</select>
	
	<!-- 참여중인 챌린지 - 참여중인 유저 수 구하는 쿼리 -->
	<select id="selectCurrentCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) 
    	FROM MY_CHALLENGE_LIST
    	WHERE
        (MY_STATUS = 'JOIN') AND 
        (MY_CHALLENGE_NO = #{no}) 
	</select>
	
	<!-- 챌린지 인증 리스트 수 조회 -->
	<select id="selectCertCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) 
		FROM CHALLENGE_CERTIFY 
		WHERE CHALLENGE_NO = #{no}
	</select>
	
	<!-- 챌린지 인증 리스트 수 조회 (로그인한 멤버의 챌린지 인증개수) -->
	<select id="selectCertCountById" parameterType="map" resultType="_int">
		SELECT COUNT(*) 
		FROM CHALLENGE_CERTIFY 
		WHERE 
			CHALLENGE_NO = #{no}
			AND
			ID = #{id}
	</select>
	
	<!-- selectCertIdList -->
	<select id="selectCertIdList" parameterType="_int" resultType="String">
		SELECT ID FROM MY_CHALLENGE_LIST WHERE MY_CHALLENGE_NO = #{no} AND MY_STATUS = 'JOIN'
	</select>
	
	<!-- 
	========================= 챌린지 검색 기능 시작 =========================
	-->
	
	<!-- 
		챌린지 검색한 리스트 조회
	 -->
	<select id="selectSearchList" resultMap="challengeResultMap">
		<include refid="selectChallengeSql"/>
		WHERE CLG.STATUS='Y' AND ATTEND_STATUS = 'PUBLIC'
		<if test="key == '1'.toString()">
		AND CLG.TITLE LIKE '%'||#{word}||'%'
		</if>
		<if test="key == '2'.toString()">
        AND CLG.ID like '%'||#{word}||'%' 
        </if> 
		<if test="key == '3'.toString()">
		AND CLG.CONTENT like '%'||#{word}||'%'
		</if>
		<if test="key == '4'.toString()">
		AND CLG.CATEGORY_NAME LIKE '%'||#{word}||'%'
		</if>
		<if test="key == '5'.toString()">
		AND CLG.TITLE LIKE '%'||#{word}||'%'
		OR CLG.ID like '%'||#{word}||'%' 
		OR CLG.CONTENT like '%'||#{word}||'%'
		OR CLG.CATEGORY_NAME LIKE '%'||#{word}||'%'
		</if>
		ORDER BY CLG.CHALLENGE_NO DESC
	</select>
	
	<!-- 
		챌린지 리스트수 조회 개수
	 -->
	<select id="selectSearchCount" resultType="_int">
		SELECT COUNT(*)
		FROM CHALLENGE
		WHERE STATUS='Y' AND ATTEND_STATUS = 'PUBLIC'
		<if test="key == '1'.toString()">
		AND TITLE LIKE '%'||#{word}||'%'
		</if>
		<if test="key == '2'.toString()">
        AND ID like '%'||#{word}||'%' 
        </if> 
		<if test="key == '3'.toString()">
		AND CONTENT like '%'||#{word}||'%'
		</if>
		<if test="key == '4'.toString()">
		AND CATEGORY_NAME LIKE '%'||#{word}||'%'
		</if>
		<if test="key == '5'.toString()">
		AND TITLE LIKE '%'||#{word}||'%'
		OR ID like '%'||#{word}||'%' 
		OR CONTENT like '%'||#{word}||'%'
		OR CATEGORY_NAME LIKE '%'||#{word}||'%'
		</if>
		ORDER BY CHALLENGE_NO DESC
	</select>
	
	<!-- 
	========================= 챌린지 검색 기능 끄읕 =========================
	-->
	
	<!-- 포인트 증감 로그(BY ID) 조회 -->
	<select id="selectPointlogById" parameterType="string" resultType="map">
		SELECT 
			NO,
			ID,
			CNO,
			VALUE,
			HISTORY
		FROM POINTLOG
		WHERE ID = #{id}
	</select>
	
	<!-- 포인트 증감 로그(BY Object) 조회 -->
	<select id="selectPointlogByObject" parameterType="map" resultType="Pointlog">
		SELECT 
			NO,
			ID,
			CNO,
			VALUE,
			HISTORY
		FROM POINTLOG
		WHERE 
			ID = #{id} AND
			CNO = #{cno} AND
			HISTORY = #{history}
	</select>
	
	<!-- 챌린지 포기 사유 전체 조회 -->
	<select id="selectGiveup" resultType="Giveup">
		SELECT
			NO,
			ID,
			CNO,
			REASON,
			GIVEUPDATE
		FROM GIVEUP
		ORDER BY NO DESC
	</select>
	
	<!-- 카테고리 전체 조회 -->
	<select id="selectCategory" resultMap="categoryResultMap">
		SELECT
			CATEGORY_NO,
			NAME
		FROM CATEGORY
	</select>
	
	<!-- 챌린지 등록 -->
	<insert id="insertChallenge" parameterType="map" useGeneratedKeys="true" keyProperty="challengeNo" keyColumn="CHALLENGE_NO">
		INSERT INTO CHALLENGE (
			CHALLENGE_NO,
			ID,
			CATEGORY_NO,
			THUMBNAIL_FILE,
			CHALLENGE_STATUS,
			ATTEND_STATUS,
			STATUS,
			TITLE,
			CONTENT,
			DEADLINE,
			MAX_COUNT,
			CURRENT_COUNT,
			ORIGINAL_FILENAME,
			RENAMED_FILENAME,
			CREATE_DATE,
			MODIFY_DATE,
			CATEGORY_NAME,
			START_DATE,
			OPENTALK_LINK,
			MINUS_POINT
		) VALUES (
			SEQ_CHALLENGE_NO.NEXTVAL,
			#{id},
			#{categoryNo},
			#{thumbnailFile},
			DEFAULT,
			#{attendStatus},
			DEFAULT,
			#{title},
			#{content},
			#{deadline},
			#{maxCount},
			DEFAULT,
			#{originalFilename},
			#{renamedFilename},
			DEFAULT,
			DEFAULT,
			#{categoryName},
			#{startDate},
			#{opentalkLink},
			#{minusPoint}
		)
	</insert>
	
	<!-- 챌린지 인증 팝업에서 인증 등록 ChallengeCertify -->
	<insert id="insertCertify" parameterType="map">
		INSERT INTO CHALLENGE_CERTIFY (
			NO,
			CHALLENGE_NO,
			ID,
			TITLE,
			ORIGINAL_FILENAME,
			RENAMED_FILENAME,
			CONTENT,
			CREATE_DATE,
			MODIFY_DATE,
			STATUS
		) VALUES (
			SEQ_CHALLENGECERTIFY_NO.NEXTVAL,
			#{challengeNo},
			#{id},
			#{title},
			#{originalFilename},
			#{renamedFilename},
			#{content},
			DEFAULT,
			DEFAULT,
			DEFAULT
		)
	</insert>

	<!-- 찜/참여중 상태 등록 MyChallengeList.. -->
	<insert id="insertMyChallengeList" parameterType="map">
		INSERT INTO MY_CHALLENGE_LIST (
		    NO,
		    ID,
		    MY_CHALLENGE_NO,
		    MY_STATUS
		) SELECT
			SEQ_MYCHALLENGELIST_NO.NEXTVAL,
			#{id},
			#{myChallengeNo},
			#{myStatus}
		FROM DUAL
		WHERE NOT EXISTS(
			SELECT
			ID, MY_CHALLENGE_NO, MY_STATUS
			FROM
				MY_CHALLENGE_LIST
			WHERE
				(ID = #{id}) AND
				(MY_CHALLENGE_NO = #{myChallengeNo}) AND
				(MY_STATUS = #{myStatus})
		)
	</insert>
	
	<!-- 포인트 증감 내역 삽입 -->
	<insert id="insertPointlog" parameterType="map">
		INSERT INTO POINTLOG (
			NO,
			ID,
			CNO,
			VALUE,
			HISTORY
		) VALUES (
			SEQ_POINTLOG_NO.NEXTVAL,
			#{id},
			#{cno},
			#{value},
			#{history}
		)
	</insert>
	
	<!-- 챌린지 포기 사유 삽입 -->
	<insert id="insertGiveup" parameterType="map">
		INSERT INTO GIVEUP (
			NO,
			ID,
			CNO,
			REASON,
			GIVEUPDATE
		) VALUES (
			SEQ_GIVEUP_NO.NEXTVAL,
			#{id},
			#{cno},
			#{reason},
			SYSDATE
		)
	</insert>
	
	<!-- 신규 카테고리 삽입 -->
	<insert id="insertCategory" parameterType="map">
		INSERT INTO CATEGORY (
			CATEGORY_NO,
			NAME
		) VALUES (
			#{categoryNo},
			#{name}
		)
	</insert>
	
	<!-- 챌린지 현재 참여인원 수정 -->
	<update id="updateCurrentCount" parameterType="map">
		UPDATE CHALLENGE
		SET
			CURRENT_COUNT = #{currentCount}
		WHERE
			CHALLENGE_NO = #{challengeNo}
	</update>
	
	<!-- 챌린지 수정 -->
	<update id="updateChallenge" parameterType="map">
		UPDATE CHALLENGE
		SET
			TITLE = #{title},
			CONTENT = #{content},
			ATTEND_STATUS = #{attendStatus},
			CATEGORY_NO = #{categoryNo},
			CATEGORY_NAME = #{categoryName},
			MAX_COUNT = #{maxCount},
			START_DATE = #{startDate},
			DEADLINE = #{deadline},
			MINUS_POINT = #{minusPoint},
			OPENTALK_LINK = #{opentalkLink},
			<if test="originalFilename != null">
				ORIGINAL_FILENAME = #{originalFilename},
			</if>
			<if test="renamedFilename != null">
				RENAMED_FILENAME = #{renamedFilename},
			</if>
			<if test="thumbnailFile != null">
				THUMBNAIL_FILE = #{thumbnailFile},
			</if>
			MODIFY_DATE = SYSDATE
		WHERE
			CHALLENGE_NO = #{challengeNo}
	</update>

	<!-- 멤버의 포인트 증감에 따른 적용하기 위함 -->
	<update id="updateMemberPoint" parameterType="map">
 		UPDATE MEMBER 
 		SET POINT = #{point}
		WHERE ID = #{id}
 	</update>
 	
	<!-- 챌린지 번호 배열로 해당 챌린지들 STATUS를 N으로 업데이트 -->
	<update id="selectDelete" parameterType="map">
		<foreach collection="array" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;">
		UPDATE CHALLENGE
			SET 
				STATUS = 'N'
			WHERE 
				CHALLENGE_NO=#{item}
		</foreach>
	</update>
	
	<!-- 게시글 번호로 해당 게시글 STATUS를 N으로 업데이트 -->
	<update id="selectOneDelete" parameterType="map">
		UPDATE CHALLENGE
			SET 
				STATUS = 'N'
			WHERE 
				CHALLENGE_NO=#{str}
	</update>
	
		<!-- 챌린지 번호 배열로 해당 챌린지들 STATUS를 Y으로 업데이트 -->
	<update id="selectRestore" parameterType="map">
		<foreach collection="array" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;">
		UPDATE CHALLENGE
			SET 
				STATUS = 'Y'
			WHERE 
				CHALLENGE_NO=#{item}
		</foreach>
	</update>
	
	<!-- 게시글 번호로 해당 게시글 STATUS를 Y으로 업데이트 -->
	<update id="selectOneRestore" parameterType="map">
		UPDATE CHALLENGE
			SET 
				STATUS = 'Y'
			WHERE 
				CHALLENGE_NO=#{str}
	</update>

	<!-- MyChallengeList 로그인한 아이디가 챌린지 포기 요청을 하면 지우기 -->
	<delete id="deleteMyChallengeList" parameterType="map">
		DELETE FROM MY_CHALLENGE_LIST
    	WHERE
    		(ID = #{id}) AND
        	(MY_CHALLENGE_NO = #{myChallengeNo}) AND
        	(MY_STATUS = #{myStatus})
	</delete>
	
	<!-- 챌린지 포기 사유 여러개 확인 후 삭제 -->
	<delete id="selectReasonDelete" parameterType="map">
		<foreach collection="array" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;">
		DELETE FROM GIVEUP
		WHERE NO = #{item}
		</foreach>
	</delete>
	
	<!-- 챌린지 포기 사유 한 개 확인 후 삭제 -->
	<delete id="selectOneReasonDelete" parameterType="map">
		DELETE FROM GIVEUP
		WHERE NO = #{str}
	</delete>
	
	<!-- 카테고리 1개 삭제 -->
	<delete id="selectOneCateDelete" parameterType="map">
		DELETE FROM CATEGORY
		WHERE CATEGORY_NO = #{str}
	</delete>
	
	<!-- 카테고리 1개 삭제 -->
	<delete id="selectCateDelete" parameterType="map">
		<foreach collection="array" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;">
		DELETE FROM CATEGORY
		WHERE CATEGORY_NO = #{item}
		</foreach>
	</delete>

</mapper>