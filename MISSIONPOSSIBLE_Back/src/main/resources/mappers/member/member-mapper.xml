<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="com.missionpossibleback.mvc.member.model.mapper.MemberMapper">

 	<sql id="selectMemberSql">
 		SELECT  ID,
 				GRADE_NAME,
 				MEMBER_NO, 
			    PASSWORD, 
			    NICKNAME, 
			    EMAIL,  
			    POINT,
			    STATUS,
			    ORIGINAL_FILENAME,
			    RENAMED_FILENAME,
			    REPORT_COUNT
		FROM MEMBER
 	</sql>
 	
 	<sql id="followListSql">
		SELECT  F.NO,
				F.FOLLOWER_ID,
				M.RENAMED_FILENAME
		FROM FOLLOWER F
		JOIN MEMBER M ON(F.FOLLOWER_ID = M.ID)
	</sql>

 	<resultMap type="Member" id="memberResultMap">
 		<id property="memberNo" column="MEMBER_NO"/>
 		<result property="id" column="ID" />
 		<result property="password" column="PASSWORD"/>
 		<result property="gradeName" column="GRADE_NAME"/>
 		<result property="nickname" column="NICKNAME"/>
 		<result property="email" column="EMAIL"/>
 		<result property="point" column="POINT"/>
 		<result property="status" column="STATUS"/>
 		<result property="originalFileName" column="ORIGINAL_FILENAME"/>
 		<result property="renamedFileName" column="RENAMED_FILENAME"/>
 		<result property="report_count" column="REPORT_COUNT"/>
 	</resultMap>
 	
 	<resultMap type="Follow" id="followListResultMap">
		<id property="followNo" column="NO"/>
		<result property="id" column="ID"/>
		<result property="followId" column="FOLLOWER_ID"/>
		<result property="profile" column="RENAMED_FILENAME"/>
	</resultMap>
	
	<resultMap type="memberReport" id="memberReportResultMap">
		<result property="id" column="ID"/>
		<result property="reportId" column="REPORT_ID"/>
		<result property="reportType" column="REPORT_TYPE"/>
		<result property="reportContent" column="REPORT_CONTENT"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="reportCount" column="REPORT_COUNT"/>
		<result property="status" column="STATUS"/>
	</resultMap>
	
	<resultMap type="withdrawalMember" id="withdrawalMemberResultMap">
		<result property="id" column="ID"/>
		<result property="reason" column="REASON"/>
		<result property="dateWithdrawal" column="DATE_WITHDRAWAL"/>
	</resultMap>
	
	<resultMap type="Grade" id="gradeResultMap">
		<result property="gradeName" column="GRADE_NAME"/>
		<result property="min" column="MIN_STANDARD"/>
		<result property="max" column="MAX_STANDARD"/>
	</resultMap>
	
 	<select id="selectMember" parameterType="string" resultMap="memberResultMap">
 		<include refid="selectMemberSql" />
		WHERE ID = #{id} AND STATUS IN('Y','A')
 	</select>
 	
 	<select id="selectMemberbyNick" parameterType="string" resultMap="memberResultMap">
 		<include refid="selectMemberSql" />
		WHERE NICKNAME = #{Nickname} AND STATUS ='Y'
		
 	</select>
 	
 	<update id="updateTempPw" parameterType="Member">
 		UPDATE MEMBER 
 		SET 
 			PASSWORD = #{tempPassword}
		WHERE MEMBER_NO = #{memberNo}
 	</update>
 	
 	<insert id="insertMember" parameterType="Member"
 		useGeneratedKeys="true" keyColumn="MEMBER_NO" keyProperty="memberNo" >

	 	INSERT INTO MEMBER ( 
		    ID,  
		    GRADE_NAME,
		    MEMBER_NO,
		    PASSWORD,
		    NICKNAME, 
		    EMAIL, 
		    POINT, 
		    STATUS, 
		    ORIGINAL_FILENAME, 
		    RENAMED_FILENAME
		    
		) VALUES(
			#{id},
			DEFAULT,
		    SEQ_UNO.NEXTVAL, 
		    #{password},
		    #{nickname},
		    #{email},
		    DEFAULT,
		    DEFAULT,
		    #{originalFileName},
		    #{renamedFileName}
		)
 	</insert>
 	
 	<update id="updateMember" parameterType="Member">
 		UPDATE MEMBER 
 		SET 
 			NICKNAME = #{nickname},
 			PASSWORD = #{password},
 			EMAIL = #{email},
 			ORIGINAL_FILENAME = #{originalFileName},
		    RENAMED_FILENAME = #{renamedFileName}
		    
		WHERE MEMBER_NO = #{memberNo}
 	</update>
 	
 	<update id="deleteMember" parameterType="_int">
 		UPDATE MEMBER
 		SET
 			STATUS='N'
 		WHERE 
 			MEMBER_NO = #{memberNo}
 	</update>
 	
 	<insert id="saveWithdrawal">
	 	INSERT INTO WITHDRAWAL (  
		    ID,  
		    REASON,
		    DATE_WITHDRAWAL
		    
		) VALUES(
			#{id},
			#{reasonWithdrawal},
			DEFAULT
		)
 	</insert>
 	
 	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
	</select>
	
	<select id="selectFollowList" resultMap="followListResultMap">
		<include refid="followListSql"/>
		WHERE F.ID = #{id} AND STATUS IN('Y')
		ORDER BY F.NO DESC
	</select>
	
	<delete id="deleteFollow">
		DELETE FROM FOLLOWER
		WHERE ID = #{id} AND FOLLOWER_ID = #{deleteFollow}
	</delete>
	
	<insert id="reportMember">
	 	INSERT INTO REPORT_MEMBER ( 
		    ID,  
		    REPORT_ID,
		    REPORT_TYPE,
		    REPORT_CONTENT,
		    CREATE_DATE
		    
		) VALUES(
			#{id},
			#{reportId},
			#{reportType},
			#{reportContent},
			DEFAULT
		)
 	</insert>
 	
 	<insert id="insertFollower">
	 	INSERT INTO FOLLOWER ( 
		    NO,  
		    ID,
		    FOLLOWER_ID
		    
		) VALUES(
			SEQ_FOLLOWER_NO.NEXTVAL,
			#{id},
			#{followId}
		)
 	</insert>
 	
 	<select id="isFollower" resultType="_int">
		SELECT COUNT(*)
		FROM FOLLOWER
		WHERE ID = #{id} AND FOLLOWER_ID = #{followId}
	</select>
	
	<select id="selectMemberIdList" resultType="String">
		SELECT ID
		FROM MEMBER
		WHERE STATUS IN('Y')
	</select>
	
	<select id="selectReportMemberList" resultMap="memberReportResultMap">
		SELECT R.ID,
			   R.REPORT_ID,
			   R.REPORT_TYPE,
			   R.REPORT_CONTENT,
			   R.CREATE_DATE,
			   M.REPORT_COUNT,
			   M.STATUS
		FROM REPORT_MEMBER R
		LEFT JOIN MEMBER M ON(R.REPORT_ID = M.ID)
		ORDER BY R.CREATE_DATE DESC
	</select>
	
	<select id="selectReportListCount" resultType="_int">
		SELECT COUNT(*)
		FROM REPORT_MEMBER
	</select>
	
	<update id="addMemberReportCount">
 		UPDATE MEMBER
 		SET
 			REPORT_COUNT = REPORT_COUNT + 1
 		WHERE 
 			ID = #{warnMemberId}
 	</update>
 	
 	<select id="selectWithdrawalMemberList" resultMap="withdrawalMemberResultMap">
		SELECT ID,
			   REASON,
			   DATE_WITHDRAWAL
		FROM WITHDRAWAL
	</select>
	
	<select id="setGradeName" resultMap="gradeResultMap">
		SELECT GRADE_NAME,
			   MIN_STANDARD,
			   MAX_STANDARD
		FROM GRADE
	</select>
	
	<insert id="insertGradename">
	 	INSERT INTO MEMBER ( 
		    GRADE_NAME
		) VALUES(
			#{gradeName}
		)
 	</insert>
 	
 	<update id="updateGradename" parameterType="Member">
 		UPDATE MEMBER 
 		SET 
 			GRADE_NAME = #{gradeName}
		WHERE MEMBER_NO = #{no}
 	</update>
 	
 	<update id="oneMemberReturn">
 		UPDATE MEMBER
 		SET
 			STATUS='Y'
 		WHERE 
 			ID = #{returnMemberId}
 	</update>
 	
 	<delete id="deleteWithdrawal">
		DELETE FROM WITHDRAWAL
		WHERE ID = #{returnMemberId}
	</delete>
	
	<select id="selectAllMemberList" parameterType="string" resultMap="memberResultMap">
 		<include refid="selectMemberSql" />
		WHERE STATUS IN('Y')
 	</select>
 	
 	<select id="selectAllMemberListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE STATUS IN('Y')
	</select>
	
	<select id="selectWithdrawalListCount" resultType="_int">
		SELECT COUNT(*)
		FROM WITHDRAWAL
	</select>
	
	<select id="getFollowListCount" resultType="_int">
		SELECT COUNT(*)
		FROM FOLLOWER
	</select>
 </mapper>